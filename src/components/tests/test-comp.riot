<test-comp bind="">
<div onclick="{handleAction}">
    <span>{b('foobar')}</span>
</div>
<style>
:host {
        color: red;
        font-size: 1.5em;
        font-weight: bold;
    }
</style>
<script>    
import {newCommon} from 'Framework/app-core/ComCommon'
export default {
    onBeforeMount(props, state) {
        try {
            this.bound = new Object()
            this.com = newCommon(this)
        } catch(e) {
            console.error('Unexpected error in "'+this.root.tagName+' onBeforeMount"', e)
        } 
        try {
            this.beforeLayout && this.beforeLayout()
        } catch(e) {
            console.error('Error in  "'+this.root.tagName+' beforeLayout"', e)
        }    
    },
    onMounted(props, state) {
        try {
            this.com.bindComponent()
        } catch(e) {
            console.error('Unexpected error in "'+this.root.tagName+' while binding"', e)
        }
        try {    
            this.afterLayout && this.afterLayout()
        } catch(e) {
            console.error('Error in  "'+this.root.tagName+' afterLayout"', e)
        }    
    },
    beforeLayout() {
        try {
                this.com.addProperty('bind', 'testValues.mainLabel as foobar')
            } catch(e) {
                console.error("error executing 'beforeLayout':",e)
          }
    },
    onAction(ev) {
        try {
                console.log("onAction called")
            } catch(e) {
                console.error("error executing 'onAction':",e)
          }
    },
    handleAction(ev) {
        let action = this.com.getComponentAttribute(null, 'action')
      try {
            if(typeof this.onAction === 'function') {
                if(this.onAction(ev)) {
                    return
                }
            }
            this.com.getApp().callPageAction(action, ev)
          } catch(e) {
            console.error("Error in action handler '"+action+"':", e)
          }
      },
    
}
</script>
</test-comp>
