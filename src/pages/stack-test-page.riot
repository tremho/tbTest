<stack-test-page>
<action-bar text="Stack Layout Test" menu-id="main" />
<simple-label text="The page-id is {b('navInfo.pageId')}"/>
<!-- <simple-slot>The type is $navInfo.context.type</simple-slot> -->
<cond-sect if="{isVertical(this)}">
    <simple-label text="Test of vertical stack layout"/>
    <fill-space height="2rem"/>
    <stack-layout>
        <simple-label text="Hello"/>
        <simple-label text="This"/>
        <simple-label text="is"/>
        <simple-label text="a"/>
        <simple-label text="Stack"/>
    </stack-layout>
</cond-sect>
<cond-sect if="{isHorizontal(this)}">
    <simple-label text="Test of horizontal stack layout"/>
    <stack-layout orientation="horizontal">
        <simple-label text="Hello"/>
        <simple-label text="This"/>
        <simple-label text="is"/>
        <simple-label text="a"/>
        <simple-label text="Stack"/>
    </stack-layout>
</cond-sect>
<cond-sect if="{isVerticalSpaced(this)}">
    <simple-label text="Test of vertical stack layout with independent alignments"/>
    <stack-layout orientation="vertical">
        <simple-label text="Hello" align-text="left"/>
        <simple-label text="This" align-text="center"/>
        <simple-label text="is" align-text="right"/>
        <simple-label text="a" align-text="center"/>
        <simple-label text="Stack" align-text="center"/>
    </stack-layout>
</cond-sect>
<cond-sect if="{isHorizontalSpaced(this)}">
    <simple-label text="Test of horizontal stack layout with independent alignments"/>
    <stack-layout orientation="horizontal">
        <simple-label text="Hello" height="2rem"/>
        <simple-label text="This" align-text="center"/>
        <simple-label text="is" align-text="right"/>
        <simple-label text="a" align-text="center"/>
        <simple-label text="Stack" align-text="center"/>
    </stack-layout>
</cond-sect>

    <script>
      import pageComp from 'Framework/app-core/PageComp'
      import * as activity from './stack-test-page'
      const pc =  Object.assign({}, pageComp)
      pc.activity = activity
      pc.isVertical = (_this) => {try { return _this.bound.navInfo.context.type === 'vertical'} catch(e) {console.error(e)}}
      pc.isHorizontal = (_this) => {try { return _this.bound.navInfo.context.type === 'horizontal'} catch(e) {console.error(e)}}
      pc.isVerticalSpaced = (_this) => {try { return _this.bound.navInfo.context.type === 'vertical-spaced'} catch(e) {console.error(e)}}
      pc.isHorizontalSpaced = (_this) => {try { return _this.bound.navInfo.context.type === 'horizontal-spaced'} catch(e) {console.error(e)}}
      export default pc
    </script>
    </stack-test-page>
